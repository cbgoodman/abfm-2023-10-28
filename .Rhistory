rstudioapi::addTheme(
themePath = "https://raw.githubusercontent.com/edavidaja/nord-rstudio/master/Nord.rstheme",
apply = TRUE
)
install.packages("devtools")
devtools::install_github("gadenbuie/rsthemes")
rsthemes::install_rsthemes(include_base16 = TRUE)
install.packages("tidyverse")
install.packages("colorspace")
remotes::install_github("wilkelab/cowplot")
install.packages("colorspace", repos = "http://R-Forge.R-project.org")
remotes::install_github("clauswilke/colorblindr")
remotes::install_github("jhelvy/renderthis", dependencies = TRUE)
remotes::install_github("mitchelloharawild/icons")
install.packages("directlabels")
install.packages(c("extrafont", "extrafontdb"))
install.packages("fixest")
install.packages("ggpubr")
install.packages("magick")
install.packages("maps")
install.packages("maptools")
install.packages("odbc")
install.packages("pacman")
install.packages("rjson")
install.packages("RODBC")
install.packages("sf")
devtools::install_github("UrbanInstitute/urbnmapr")
install.packages("lfe")
library("tidyverse")
library("tidycensus")
install.packages("tidycensus")
library("tidycensus")
data(acs5_geography)
force(acs5_geography)
View(acs5_geography)
wright <- get_acs(
state = "MN",
county = "Wright",
geography = "county subdivision",
variables = "B19013_001",
geometry = TRUE,
year = 2020
)
census_api_key("fd306a74de5e9903e126bd13acf93637987e191d")
wright <- get_acs(
state = "MN",
county = "Wright",
geography = "county subdivision",
variables = "B19013_001",
geometry = TRUE,
year = 2020
)
census_api_key("d963833e4b2909474c4fc58d9ac5f774dcc6ea97")
wright <- get_acs(
state = "MN",
county = "Wright",
geography = "county subdivision",
variables = "B19013_001",
geometry = TRUE,
year = 2020
)
View(wright)
View(wright)
wright %>%
ggplot(aes(fill = estimate)) +
geom_sf(color = NA) +
scale_fill_viridis_c(option = "magma")
View(wright)
wright <- get_acs(
state = "MN",
county = "Wright",
geography = "place",
variables = "B19013_001",
geometry = TRUE,
year = 2020
)
View(wright)
wright <- get_acs(
state = "MN",
#county = "Wright",
geography = "place",
variables = "B19013_001",
geometry = TRUE,
year = 2020
)
View(wright)
wright <- get_acs(
state = "MN",
county = "Wright",
geography = "county subdivision",
variables = "B19013_001",
geometry = TRUE,
year = 2020
)
View(wright)
wright <- get_acs(
state = "MN",
county = "Wright",
geography = "county subdivision",
variables = "B19013_001",
geometry = TRUE,
year = 2020
) %>%
filter(str_detect(Text,  regex("city", ignore_case = TRUE)))
View(wright)
wright <- get_acs(
state = "MN",
county = "Wright",
geography = "county subdivision",
variables = "B19013_001",
geometry = TRUE,
year = 2020
) %>%
filter(str_detect(NAME,  regex("city", ignore_case = TRUE)))
View(wright)
wright %>%
ggplot(aes(fill = estimate)) +
geom_sf(color = NA) +
scale_fill_viridis_c(option = "magma")
library("urbnmapr")
wright_county <- get_urbn_map("counties", sf = TRUE) %>%
filter(county_fips == "27171")
ggplot(aes(fill = estimate)) +
geom_sf(wright, color = NA) +
geom_sf(wright_county) +
scale_fill_viridis_c(option = "magma")
ggplot(aes()) +
geom_sf(wright, color = NA) +
geom_sf(wright_county) +
scale_fill_viridis_c(option = "magma")
ggplot( +
geom_sf(wright, color = NA, aes(fill=estimate)) +
geom_sf(wright_county) +
scale_fill_viridis_c(option = "magma")
ggplot() +
geom_sf(wright, color = NA, aes(fill=estimate)) +
geom_sf(wright_county) +
scale_fill_viridis_c(option = "magma")
ggplot() +
geom_sf(, color = NA, aes(data = wright, fill=estimate)) +
geom_sf(wright_county) +
scale_fill_viridis_c(option = "magma")
ggplot() +
geom_sf(, color = NA, aes(data = wright, fill=estimate)) +
#geom_sf(wright_county) +
scale_fill_viridis_c(option = "magma")
ggplot() +
geom_sf(wright, mapping = aes(fill = estimate)) +
#geom_sf(wright_county) +
scale_fill_viridis_c(option = "magma")
ggplot() +
geom_sf(wright, mapping = aes(fill = estimate), color = NA) +
#geom_sf(wright_county) +
scale_fill_viridis_c(option = "magma")
ggplot() +
geom_sf(wright, mapping = aes(fill = estimate), color = NA) +
geom_sf(wright_county, mapping = aes(fill = NA), color = "black") +
scale_fill_viridis_c(option = "magma")
ggplot() +
geom_sf(wright, mapping = aes(fill = estimate), color = NA) +
geom_sf(wright_county, mapping = aes(), color = "black") +
scale_fill_viridis_c(option = "magma")
ggplot() +
geom_sf(wright_county, mapping = aes(), color = "black") +
geom_sf(wright, mapping = aes(fill = estimate), color = NA) +
scale_fill_viridis_c(option = "magma")
ggplot() +
geom_sf(wright_county, mapping = aes(), color = "black") +
geom_sf(wright, mapping = aes(fill = "white"), color = NA) +
scale_fill_viridis_c(option = "magma")
ggplot() +
geom_sf(wright_county, mapping = aes(), color = "black") +
geom_sf(wright, mapping = aes(fill = "white"), color = NA)
ggplot() +
geom_sf(wright_county, mapping = aes(), color = "black") +
geom_sf(wright, mapping = aes(), color = NA, fill = "white")
ggplot() +
geom_sf(wright_county, mapping = aes(fill = "Unincorporated"), color = "black") +
geom_sf(wright, mapping = aes(), color = NA, fill = "white")
wright_county <- st_transform(get_urbn_map("counties", sf = TRUE), 4269) %>%
filter(county_fips == "27171")
library("sf")
wright_county <- st_transform(get_urbn_map("counties", sf = TRUE), 4269) %>%
filter(county_fips == "27171")
ggplot() +
geom_sf(wright_county, mapping = aes(), color = "black") +
geom_sf(wright, mapping = aes(), color = NA, fill = "white")
wright_county <- get_acs(
state = "MN",
county = "Wright",
geography = "county",
variables = "B19013_001",
geometry = TRUE,
year = 2020
)
ggplot() +
geom_sf(wright_county, mapping = aes(), color = "black") +
geom_sf(wright, mapping = aes(), color = NA, fill = "white")
ggplot() +
geom_sf(wright_county, mapping = aes(), color = "black", fill = "#333333") +
geom_sf(wright, mapping = aes(), color = NA, fill = "white")
ggplot() +
geom_sf(wright_county, mapping = aes(), color = "black", fill = "#ffffff") +
geom_sf(wright, mapping = aes(), color = NA, fill = "#333333")
install.packages("qmethod")
library("qmethod")
data <- read.csv("~/Desktop/Clean data study 1_9968 FINAL NO CODES.csv", header = FALSE)
View(data)
qmethod(data, nfactors= 4, rotation = "verimax")
qmethod(data, nfactors= 4)
source("~/.active-rstudio-document")
results$qdc
View(results)
View(results[["qdc"]])
View(data)
View(results[["flagged"]])
qmethod(data, nfactors= 6)
View(results[["qdc"]])
View(results[["flagged"]])
View(results)
View(results[["qdc"]])
View(results[["flagged"]])
results <- qmethod(data, nfactors= 6)
View(results[["qdc"]])
View(results[["flagged"]])
View(results[["f_char"]][["characteristics"]])
results <- qmethod(data, nfactors= 8)
View(results)
View(results[["f_char"]][["characteristics"]])
library(knitr)
library(tidyverse)
library(kableExtra)
library(icons)
library(xaringan)
library(sf)
library(urbnmapr)
counties_sf <- get_urbn_map("counties", sf = TRUE)
# convert to contiguous US
counties_sf_conus <- counties_sf %>%
filter(state_name != "Alaska" & state_name != "Hawaii") %>%
arrange(county_fips)
# import msa crosswalk
msa80 <- read_csv("~/Dropbox/Data/Census/delineation-files/83msa.csv", col_types = list(col_character(), col_character()))
msa_sf_conus <- counties_sf_conus %>%
left_join(., msa80, by = "county_fips") %>%
st_make_valid() %>%
group_by(msa_code) %>%
summarise(across(geometry, ~ st_union(.)), .groups = "keep") %>%
ungroup()
outside_border <- counties_sf_conus %>% st_union()
View(msa_sf_conus)
View(msa80)
View(msa_sf_conus)
msa_sf_conus <- counties_sf_conus %>%
left_join(., msa80, by = "county_fips") %>%
st_make_valid() %>%
group_by(msa_code) %>%
summarise(across(geometry, ~ st_union(.)), .groups = "keep") %>%
ungroup() %>%
filter(is.na(msa_code))
View(msa_sf_conus)
msa_sf_conus <- counties_sf_conus %>%
left_join(., msa80, by = "county_fips") %>%
st_make_valid() %>%
group_by(msa_code) %>%
summarise(across(geometry, ~ st_union(.)), .groups = "keep") %>%
ungroup() %>%
filter(msa_code != NA)
View(msa_sf_conus)
msa_sf_conus <- counties_sf_conus %>%
left_join(., msa80, by = "county_fips") %>%
st_make_valid() %>%
group_by(msa_code) %>%
summarise(across(geometry, ~ st_union(.)), .groups = "keep") %>%
ungroup() %>%
filter(is.na(msa_code) == FALSE)
View(msa_sf_conus)
setwd("/Users/chrisgoodman/Library/CloudStorage/Dropbox/Personal/website/test/quarto-revealjs-clean")
install.packages("gt")
install.packages("threejs")
setwd("/Users/chrisgoodman/Library/CloudStorage/Dropbox/Programs/templates/quarto-template-niu")
setwd("/Users/chrisgoodman/Library/CloudStorage/Dropbox/Projects/Conferences/ABFM 2023/goodman-abfm-2023-presentation")
